package com.atb.app.activities;import androidx.appcompat.app.AppCompatActivity;import android.content.Intent;import android.os.Bundle;import android.os.Handler;import android.util.Log;import com.applozic.mobicomkit.Applozic;import com.atb.app.R;import com.atb.app.base.CommonActivity;import com.atb.app.commons.Commons;import com.atb.app.preference.PrefConst;import com.atb.app.preference.Preference;import com.google.android.gms.common.internal.service.Common;import com.google.android.libraries.places.api.Places;import com.google.android.libraries.places.api.net.PlacesClient;import org.json.JSONException;import org.json.JSONObject;import java.text.DateFormatSymbols;import java.util.Collections;import java.util.Locale;import io.branch.referral.Branch;import io.branch.referral.BranchError;public class SplashActivity extends CommonActivity {    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.activity_splash);        Commons.Months = new DateFormatSymbols(Locale.ENGLISH).getShortMonths();        getPhoneSize();        Places.initialize(getApplicationContext(), getString(R.string.google_maps_key));        Applozic.init(this,getString(R.string.applozic_key));        PlacesClient placesClient = Places.createClient(this);      //    }    void gotoNextpage() {        new Handler().postDelayed(new Runnable() {            @Override            public void run() {                goTo(SplashActivity.this, LoginActivity.class, true);            }        }, 3000);    }    @Override public void onStart() {        super.onStart();        Branch branch = Branch.getInstance(getApplicationContext());        branch.initSession(new Branch.BranchReferralInitListener(){            @Override            public void onInitFinished(JSONObject referringParams, BranchError error) {                int feed_id = -1;                if (error == null) {                    // params are the deep linked params associated with the link that the user clicked -> was re-directed to this app                    // params will be empty if no data found                    // ... insert custom logic here ...                    Log.i("aaaaaaaaa", referringParams.toString());                    try {                        Commons.feed_id = referringParams.getInt("nav_here");                    } catch (JSONException e) {                        e.printStackTrace();                    }                } else {                }                gotoNextpage();            }        }, this.getIntent().getData(), this);    }}